@isTest
public with sharing class TimedResendsControllerTest extends ECFMGTestFactory{
    @testSetup static void setup(){
        CurrentECFMGIDSequence__c curECFMGSetting = CurrentECFMGIDSequence__c.getOrgDefaults();
        curECFMGSetting.ECFMG_ID__c = '00000001';
        upsert curECFMGSetting;
        CurrentEntityIDSequence__c curEntitySetting = CurrentEntityIDSequence__c.getOrgDefaults();
        curEntitySetting.Entity_ID__c = '0000000';
        upsert curEntitySetting;
        //Common Data Setup
        BaseTestFactory.getCustomerCommunityPlusUser();
    }
    @isTest static void checkCaseStatusTest(){
        Test.startTest();
        Account acc = new Account();
        acc.Name = 'Test Account Name 1';
        acc.BillingCountry = 'India';
        insert acc;
        System.assert(acc.Id != null,'account 1 creation failed');
        Contact con = new Contact();
        con.FirstName = 'Test';
        con.LastName = 'Test';
        con.Accountid = acc.id;
        con.Email = ConstantsTest.TEST_EMAIL + ConstantsTest.TEST_EMAIL_DOMAIN;
        insert con;
        System.assert(con.Id != null,'contact 1 creation failed');
        Case caseobj = new Case();
        caseobj.ContactId = con.Id;
        caseobj.AccountId = con.AccountId;
        caseobj.RecordTypeId = Constants.CVRECORDTYPEID;
        caseobj.Internal_Status__c = Constants.CASE_STATUS_SENT_FOR_VERIFICATION;
        insert caseobj;        
        Verification_Packet__c vpObj = new Verification_Packet__c();
        vpObj.Case__c = caseobj.Id;
        vpObj.Is_Active__c = true;
        insert vpObj;        
        Send_Request__c srObj = new Send_Request__c();
        srObj.Verification_Packet__c = vpObj.Id;
        srObj.Is_Deleted__c = false;
        srObj.Current_Send_Date__c = null;
        srObj.Send_Method__c = 'Email';
        insert srObj;        
        System.assert(caseObj.Id != null, 'Case 1 creation failed');
        Boolean caseStatus = TimedResendsController.checkCaseStatus('exception');
        system.assert(caseStatus!=true,'Case 1 status is not Sent for verification');
        Boolean caseStatusEmailFlagValue = TimedResendsController.updateCaseStatus(caseobj.Id, srobj.Send_Method__c, srObj.Id);
        system.assert(caseStatusEmailFlagValue == true,'Case status is not updated as Pending Print - Verification Incomplete');        
        Test.stopTest();
    }
    @isTest static void getSendMethodTest(){
        Test.startTest();
        Account acc = new Account();
        acc.Name = 'Test Account Name 2';
        acc.BillingCountry = 'India';
        insert acc;
        System.assert(acc.Id != null,'account 2 creation failed');
        Contact con = new Contact();
        con.FirstName = 'Test';
        con.LastName = 'Test';
        con.Accountid = acc.id;
        con.Email = ConstantsTest.TEST_EMAIL + ConstantsTest.TEST_EMAIL_DOMAIN;
        insert con;
        System.assert(con.Id != null,'contact 2 creation failed');
        Case caseobj = new Case();
        caseobj.ContactId = con.Id;
        caseobj.AccountId = con.AccountId;
        caseobj.Internal_Status__c = Constants.CASE_STATUS_SENT_FOR_VERIFICATION;
        caseobj.RecordTypeId = Constants.CVRECORDTYPEID;
        caseobj = (Case)ECFMGTestFactory.make(ECFMGDefaultTestData.DefaultCaseData.class, caseobj);
        Case caseobj2 = new Case();
        caseobj2.ContactId = con.Id;
        caseobj2.AccountId = con.AccountId;
        caseobj2.Internal_Status__c = Constants.CASE_STATUS_SENT_FOR_VERIFICATION;
        caseobj2.RecordTypeId = Constants.CVRECORDTYPEID;
        caseObj2 = (Case)ECFMGTestFactory.make(ECFMGDefaultTestData.DefaultCaseData.class, caseObj2);
        Case caseobj3 = new Case();
        caseobj3.ContactId = con.Id;
        caseobj3.AccountId = con.AccountId;
        caseobj3.Internal_Status__c = Constants.CASE_STATUS_SENT_FOR_VERIFICATION;
        caseobj3.RecordTypeId = Constants.CVRECORDTYPEID;
        caseobj3 = (Case)ECFMGTestFactory.make(ECFMGDefaultTestData.DefaultCaseData.class, caseobj3);
        run();
        System.assert(caseObj.Id != null,'Case 2 creation failed');
        Boolean caseStatus = TimedResendsController.checkCaseStatus(caseObj.Id);
        system.assert(caseStatus == true,'Case 2 status is not Sent for verification');
        Verification_Packet__c vpObj = new Verification_Packet__c();
        vpObj.Case__c = caseObj.Id;
        vpObj.Is_Active__c = true;
        insert vpObj;
        Verification_Packet__c vpObj2 = new Verification_Packet__c();
        vpObj2.Case__c = caseobj2.Id;
        vpObj2.Is_Active__c = true;
        insert vpObj2;
        Verification_Packet__c vpObj3 = new Verification_Packet__c();
        vpObj3.Case__c = caseobj3.Id;
        vpObj3.Is_Active__c = true;
        insert vpObj3;
        System.assert(vpObj.Id != null,'Verification Packet 2 creation failed');
        Send_Request__c srObj = new Send_Request__c();
        srObj.Verification_Packet__c = vpObj.Id;
        srObj.Is_Deleted__c = false;
        srObj.Current_Send_Date__c = null;
        srObj.Send_Method__c = 'Paper';
        srObj = (Send_Request__c)ECFMGTestFactory.make(ECFMGDefaultTestData.DefaultSendRequestData.class, srObj);
        run();
        Send_Request__c srObj2 = new Send_Request__c();
        srObj2.Verification_Packet__c = vpObj2.Id;
        srObj2.Is_Deleted__c = false;
        srObj2.Current_Send_Date__c = Date.Today();
        srObj2.Send_Method__c = 'Paper';
        srObj2 = (Send_Request__c)ECFMGTestFactory.make(ECFMGDefaultTestData.DefaultSendRequestData.class, srObj2);
        run();
        Send_Request__c srObj3 = new Send_Request__c();
        srObj3.Verification_Packet__c = vpObj3.Id;
        srObj3.Is_Deleted__c = true;
        srObj3.Current_Send_Date__c = null;
        srObj3.Send_Method__c = 'Paper';
        srObj3 = (Send_Request__c)ECFMGTestFactory.make(ECFMGDefaultTestData.DefaultSendRequestData.class, srObj3);
        run();
        System.assert(srObj.Id != null,'Send Request 2 creation failed');
        String sendreqStatus = TimedResendsController.getSendMethod(caseObj.Id);
        system.assert(sendreqStatus.contains('Paper'),'Send Method 2 is not Paper'); 
        String sendreqAdHoc = TimedResendsController.getSendMethod(caseObj2.Id); 
        system.assert(sendreqAdHoc.contains('adhocsendrecord'),'Send Method has Current Send Date Null');  
        String sendreqNoRecord = TimedResendsController.getSendMethod(caseobj3.Id); 
        system.assert(sendreqNoRecord.contains('norecord'),'Send Method returned records');             
        Test.stopTest();
    }
    @isTest static void updateCaseStatusTest(){
        Test.startTest();
        Account acc = new Account();
        acc.Name = 'Test Account Name 3';
        acc.BillingCountry = 'India';
        insert acc;
        System.assert(acc.Id != null,'account 3 creation failed');
        Contact con = new Contact();
        con.Email = ConstantsTest.TEST_EMAIL + ConstantsTest.TEST_EMAIL_DOMAIN;
        con.FirstName = 'Test';
        con.LastName = 'Test';
        con.Accountid = acc.id;
        insert con;
        System.assert(con.Id != null,'contact 3 creation failed');
        Case caseobj = new Case();
        caseobj.ContactId = con.Id;
        caseobj.AccountId = con.AccountId;
        caseobj.Internal_Status__c = Constants.CASE_STATUS_SENT_FOR_VERIFICATION;
        caseobj.RecordTypeId = Constants.CVRECORDTYPEID;
        insert caseobj;
        Case caseobj2 = new Case();
        caseobj2.ContactId = con.Id;
        caseobj2.AccountId = con.AccountId;
        caseobj2.Internal_Status__c = Constants.CASE_STATUS_SENT_FOR_VERIFICATION;
        caseobj2.RecordTypeId = Constants.CVRECORDTYPEID;
        insert caseobj2;        
        Id idVerifcnRevRecTy = Schema.SObjectType.Affirmation__c.getRecordTypeInfosByDeveloperName().get('Verification_Review').getRecordTypeId();
        Affirmation__c listOfAff = new Affirmation__c();
        listOfAff.Case__c = caseobj.Id;
        listOfAff.Verification_method_is_acceptable__c = 'No';
        listOfAff.Verification_response_returned__c = 'No'; 
        listOfAff.RecordTypeId = idVerifcnRevRecTy;
        insert listOfAff;
        System.assert(caseObj.Id != null,'Case 3 creation failed');
        Boolean caseStatus = TimedResendsController.checkCaseStatus(caseobj.Id);
        system.assert(caseStatus==true,'Case 3 status is not Sent for verification');
        Boolean case2Status = TimedResendsController.checkCaseStatus(caseobj2.Id);
        system.assert(case2Status==true,'Case 2 status is not Sent for verification');
        Verification_Packet__c vpObj = new Verification_Packet__c();
        vpObj.Case__c = caseobj.Id;
        vpObj.Is_Active__c = true;
        insert vpObj;
        Verification_Packet__c vpObj2 = new Verification_Packet__c();
        vpObj2.Case__c = caseobj2.Id;
        vpObj2.Is_Active__c = true;
        insert vpObj2;            
        System.assert(vpObj.Id != null,'Verification Packet 3 creation failed');
        Send_Request__c srObj = new Send_Request__c();
        srObj.Verification_Packet__c = vpObj.Id;
        srObj.Is_Deleted__c = false;
        srObj.Current_Send_Date__c = null;
        srObj.Send_Method__c = 'Paper';
        insert srObj;
        Send_Request__c srObj2 = new Send_Request__c();
        srObj2.Verification_Packet__c = vpObj2.Id;
        srObj2.Is_Deleted__c = false;
        srObj2.Current_Send_Date__c = null;
        srObj2.Send_Method__c = 'Paper';
        srObj2.Request_sent_via_courier__c  = true;
        insert srObj2;             
        System.assert(srObj.Id != null,'Send Request 3 creation failed');
        String sendreqSatus = TimedResendsController.getSendMethod(caseObj.Id);
        system.assert(sendreqSatus.contains('Paper'),'Send Method 3 is not Paper');
       // Boolean caseStatusFlag = TimedResendsController.updateCaseStatus(caseobj.Id, srobj.Send_Method__c, srObj.Id);
        //system.assert(caseStatusFlag == true,'Case 3 status is not updated as Pending Print - Verification Incomplete');
        Boolean caseStatusFlagValue = TimedResendsController.updateCaseStatus(caseobj2.Id, srObj2.Send_Method__c, srObj2.Id);
        system.assert(caseStatusFlagValue == true,'Case 2 status is not updated as Pending Print - Verification Incomplete');                  
        Boolean caseCheckResendRecordsFlag = TimedResendsController.checkResendRecords(caseObj.Id); 
        system.assert(caseCheckResendRecordsFlag == true,'Returns false');     
        Test.stopTest();
    }
    @isTest static void updateCaseStatusTest2(){
        Test.startTest();
        Account acc = new Account();
        acc.Name = 'Test Account Name 3';
        acc.BillingCountry = 'India';
        insert acc;
        System.assert(acc.Id != null,'account 3 creation failed');
        Contact con = new Contact();
        con.Email = ConstantsTest.TEST_EMAIL + ConstantsTest.TEST_EMAIL_DOMAIN;
        con.FirstName = 'Test';
        con.LastName = 'Test';
        con.Accountid = acc.id;
        insert con;
        System.assert(con.Id != null,'contact 3 creation failed');
        Case caseobj = new Case();
        caseobj.ContactId = con.Id;
        caseobj.AccountId = con.AccountId;
        caseobj.Internal_Status__c = Constants.CASE_STATUS_VERIFICATION_INCOMPLETE;
        caseobj.RecordTypeId = Constants.CVRECORDTYPEID;
        insert caseobj;                
        Verification_Packet__c vpObj = new Verification_Packet__c();
        vpObj.Case__c = caseobj.Id;
        vpObj.Is_Active__c = true;
        insert vpObj;        
        Send_Request__c srObj = new Send_Request__c();
        srObj.Verification_Packet__c = vpObj.Id;
        srObj.Is_Deleted__c = false;
        srObj.Current_Send_Date__c = null;
        srObj.Send_Method__c = 'Paper';
        insert srObj;                
        Boolean caseStatusVerificationIncompleteFlagValue = TimedResendsController.updateCaseStatus(caseobj.Id, srObj.Send_Method__c, srObj.Id);
        system.assert(caseStatusVerificationIncompleteFlagValue == true,'Case status is not updated as Pending Print - Verification Incomplete');                       
        Test.stopTest();
    }
}